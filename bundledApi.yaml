openapi: 3.0.1
info:
  title: ingestion-trigger
  description: >-
    Service that designed to validate and trigger ingestion of new layers from
    raw data and update existing layers
  version: 2.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /ingestion:
    post:
      operationId: newIngestion
      tags:
        - ingestion
      summary: start a process of creating new layer from raw data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRasterLayer'
            examples:
              NewRasterLayerExample:
                $ref: '#/components/examples/NewRasterLayerExample'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /ingestion/{id}:
    put:
      operationId: updateLayer
      tags:
        - ingestion
      summary: start a process of creating update to exists layer from raw data
      parameters:
        - name: id
          in: path
          description: The id of the layer to update
          required: true
          schema:
            type: string
          example: 5f7b3b3b-3b3b-3b3b-3b3b-3b3b3b3b3b3b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRasterLayer'
            examples:
              UpdateRasterLayerExample:
                $ref: '#/components/examples/UpdateRasterLayerExample'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /ingestion/validateSources:
    post:
      operationId: validateSources
      tags:
        - ingestion
      summary: checks that all provided files have valid raw data
      requestBody:
        description: A json object containing array of files and origin source path
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputFiles'
            example:
              originDirectory: string
              fileNames:
                - example.gpkg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateSourcesResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /ingestion/sourcesInfo:
    post:
      operationId: getGdalInfo
      tags:
        - ingestion
      summary: returns the GDAL info for the provided source files
      requestBody:
        description: A json object containing array of files and origin source path
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputFiles'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sourcesInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '404':
          description: Files not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
components:
  schemas:
    updateRasterLayerMetadata:
      type: object
      required:
        - classification
      description: layer metadata that will override
      properties:
        classification:
          type: string
          description: Permitted roles
          pattern: ^[0-9]$|^[1-9][0-9]$|^(100)$
    productType:
      type: string
      enum:
        - Orthophoto
        - OrthophotoHistory
        - OrthophotoBest
        - RasterMap
        - RasterMapBest
        - RasterAid
        - RasterAidBest
        - RasterVector
        - RasterVectorBest
      description: layer's type might be derived from the first letter
    RasterLayerBaseMetadata:
      required:
        - productId
        - productType
      properties:
        productId:
          type: string
          description: layer's external identifier
          pattern: ^[A-Za-z]{1}[A-Za-z0-9_]{0,62}$
          example: BLUE_MARBLE
        productType:
          $ref: '#/components/schemas/productType'
    newRasterLayerMetadata:
      type: object
      required:
        - productId
        - productName
        - productType
        - srs
        - srsName
        - transparency
        - region
      allOf:
        - $ref: '#/components/schemas/updateRasterLayerMetadata'
        - $ref: '#/components/schemas/RasterLayerBaseMetadata'
        - properties:
            productName:
              type: string
              description: Layer's external name
            productSubType:
              type: string
              description: Layer's sub type
            region:
              type: array
              items:
                type: string
              description: region of record
            srs:
              type: string
              enum:
                - '4326'
              description: geo system id
            srsName:
              type: string
              enum:
                - WGS84GEO
              description: geo system name
            transparency:
              type: string
              enum:
                - TRANSPARENT
                - OPAQUE
              description: layer can be transparent or opaque
            producerName:
              type: string
              description: creator name default IDFMU
            scale:
              type: integer
              minimum: 0
              maximum: 100000000
            description:
              type: string
              description: layer's description
    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number
        minimum: -180
        maximum: 180
    BBox:
      type: array
      minItems: 4
      items:
        type: number
    Polygon:
      type: object
      description: GeoJSON Polygon
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              $ref: '#/components/schemas/Point2D'
        bbox:
          $ref: '#/components/schemas/BBox'
    polygonPartMetadata:
      type: object
      description: Layer polygon part data definitions
      required:
        - sourceName
        - imagingTimeBeginUTC
        - imagingTimeEndUTC
        - footprint
        - resolutionDegree
        - resolutionMeter
        - sourceResolutionMeter
        - horizontalAccuracyCE90
        - sensors
      properties:
        sourceId:
          type: string
          description: Layer's external identifier
        sourceName:
          type: string
          description: Layer's external name
        imagingTimeBeginUTC:
          type: string
          description: Oldest imaging date (UTC)
          format: date-time
        imagingTimeEndUTC:
          type: string
          description: Latest imaging date (UTC)
          format: date-time
        resolutionDegree:
          type: number
          minimum: 1.67638e-7
          maximum: 0.703125
          format: double
          description: min resolution of layer in degrees/pixel
        resolutionMeter:
          type: number
          minimum: 0.0185
          maximum: 78271.52
          format: double
          description: min resolution of layer in meters
        sourceResolutionMeter:
          type: number
          minimum: 0.0185
          maximum: 78271.52
          format: double
          description: min resolution of layer in meters
        horizontalAccuracyCE90:
          type: number
          minimum: 0.01
          maximum: 4000
          format: double
          description: minimum Horizontal Accuracy
        sensors:
          type: array
          items:
            type: string
          description: Layer sensors list
        countries:
          type: array
          items:
            type: string
          description: countries included in the layer
        cities:
          type: array
          items:
            type: string
          description: cities included in the layer
        description:
          type: string
        footprint:
          $ref: '#/components/schemas/Polygon'
    InputFiles:
      title: Layer input files
      type: object
      properties:
        originDirectory:
          type: string
          example: string
          description: layer source directory
        fileNames:
          type: array
          items:
            type: string
            pattern: ^.+\.[Gg][Pp][Kk][Gg]$
            description: layer source files
          example:
            - example.gpkg
      required:
        - originDirectory
        - fileNames
    NewRasterLayer:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/newRasterLayerMetadata'
        partData:
          type: array
          items:
            $ref: '#/components/schemas/polygonPartMetadata'
        inputFiles:
          $ref: '#/components/schemas/InputFiles'
    successMessage:
      type: object
      properties:
        status:
          type: string
          example: success
      required:
        - status
    errorMessage:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    UpdateRasterLayer:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/updateRasterLayerMetadata'
        partData:
          type: array
          items:
            $ref: '#/components/schemas/polygonPartMetadata'
        inputFiles:
          $ref: '#/components/schemas/InputFiles'
    validateSourcesResponse:
      type: object
      properties:
        isValid:
          type: boolean
          example: true
        message:
          type: string
          example: Files are valid
      required:
        - isValid
    Point:
      type: object
      description: GeoJSON Point
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/Point2D'
        bbox:
          $ref: '#/components/schemas/BBox'
    LineString:
      type: object
      description: GeoJSON LineString
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id3
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            $ref: '#/components/schemas/Point2D'
        bbox:
          $ref: '#/components/schemas/BBox'
    MultiPoint:
      type: object
      description: GeoJSON MultiPoint
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id5
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Point2D'
        bbox:
          $ref: '#/components/schemas/BBox'
    MultiLineString:
      type: object
      description: GeoJSON MultiLineString
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              $ref: '#/components/schemas/Point2D'
        bbox:
          $ref: '#/components/schemas/BBox'
    MultiPolygon:
      type: object
      description: GeoJSON MultiPolygon
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                $ref: '#/components/schemas/Point2D'
        bbox:
          $ref: '#/components/schemas/BBox'
    Geometry:
      description: GeoJSON Geometry
      discriminator:
        propertyName: type
      type: object
      anyOf:
        - $ref: '#/components/schemas/Point'
        - $ref: '#/components/schemas/LineString'
        - $ref: '#/components/schemas/Polygon'
        - $ref: '#/components/schemas/MultiPoint'
        - $ref: '#/components/schemas/MultiLineString'
        - $ref: '#/components/schemas/MultiPolygon'
    sourcesInfoResponse:
      type: array
      items:
        type: object
        properties:
          crs:
            type: number
          fileFormat:
            type: string
          pixelSize:
            type: number
          extentPolygon:
            $ref: '#/components/schemas/Geometry'
          fileName:
            type: string
        required:
          - crs
          - fileFormat
          - pixelSize
          - extentPolygon
          - fileName
        example:
          crs: 4326
          fileFormat: gpkg
          pixelSize: 0.703125
          extentPolygon:
            type: Polygon
            coordinates:
              - - - -180
                  - -90
                - - -180
                  - 90
                - - 180
                  - 90
                - - 180
                  - -90
                - - -180
                  - -90
          fileName: file.gpkg
  examples:
    NewRasterLayerExample:
      value:
        metadata:
          productId: SOME_NAME
          productName: string
          productType: Orthophoto
          productSubType: string
          description: string
          srs: '4326'
          srsName: WGS84GEO
          transparency: TRANSPARENT
          region:
            - string
          classification: '6'
          producerName: string
          scale: 100000000
        partData:
          - sourceId: avi
            sourceName: string
            imagingTimeBeginUTC: '2024-01-28T13:47:43.427Z'
            imagingTimeEndUTC: '2024-01-28T13:47:43.427Z'
            resolutionDegree: 0.703125
            resolutionMeter: 8000
            sourceResolutionMeter: 8000
            horizontalAccuracyCE90: 10
            sensors:
              - string
            countries:
              - string
            cities:
              - string
            description: string
            footprint:
              type: Polygon
              coordinates:
                - - - 34.85149443279957
                    - 32.30543192283443
                  - - 34.85149443279957
                    - 32.29430955805424
                  - - 34.86824157112912
                    - 32.29430955805424
                  - - 34.86824157112912
                    - 32.30543192283443
                  - - 34.85149443279957
                    - 32.30543192283443
        inputFiles:
          originDirectory: string
          fileNames:
            - example.gpkg
    UpdateRasterLayerExample:
      value:
        metadata:
          classification: '6'
        partData:
          - sourceId: string
            sourceName: string
            imagingTimeBeginUTC: '2024-01-28T13:47:43.427Z'
            imagingTimeEndUTC: '2024-01-28T13:47:43.427Z'
            resolutionDegree: 0.703125
            resolutionMeter: 78271.52
            sourceResolutionMeter: 78271.52
            horizontalAccuracyCE90: 10
            sensors:
              - string
            countries:
              - string
            cities:
              - string
            description: string
            footprint:
              type: Polygon
              coordinates:
                - - - 34.85149443279957
                    - 32.30543192283443
                  - - 34.85149443279957
                    - 32.29430955805424
                  - - 34.86824157112912
                    - 32.29430955805424
                  - - 34.86824157112912
                    - 32.30543192283443
                  - - 34.85149443279957
                    - 32.30543192283443
        inputFiles:
          originDirectory: string
          fileNames:
            - example.gpkg
